[gd_scene load_steps=5 format=3 uid="uid://sqh3853au6bu"]

[ext_resource type="Shader" path="res://shaders/outline.gdshader" id="2_vbg51"]
[ext_resource type="Texture2D" uid="uid://hmvu8uptgkg6" path="res://textures/overworld/icons/heart.png" id="3_ifian"]

[sub_resource type="GDScript" id="GDScript_fe2dw"]
script/source = "extends Node2D

@onready var button: TextureButton = $Button

var color: Color = Color.GRAY

var width: int = 2

var id: int

var children: Array[Node2D] = []

var button_texture: Texture
var target_scene: String = \"res://scenes/\"

signal buttonPressed(targetScene: String)

func _ready() -> void:
	button.texture_normal = button_texture
	button.material = button.material.duplicate()


func set_event_type(event_name: String, texture: Texture) -> void:
	button_texture = texture
	target_scene += \"%s/%s.tscn\" % [event_name, event_name]


func add_child_event(child: Node2D) -> void:
	if not children.has(child):
		children.append(child)
		queue_redraw()


func _draw() -> void:
	for child in children:
		var line = child.position - position
		var normal = line.normalized()
		line -= normal
		draw_line(normal, line, color, width)

func _on_button_mouse_entered() -> void:
	button.material.set_shader_parameter(\"width\", 4)


func _on_button_mouse_exited() -> void:
	button.material.set_shader_parameter(\"width\", 0)


func _on_button_pressed() -> void:
	buttonPressed.emit(target_scene)
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_58eb4"]
shader = ExtResource("2_vbg51")
shader_parameter/color = Color(0.971398, 0.784429, 0.328397, 1)
shader_parameter/width = 0.0
shader_parameter/pattern = 2
shader_parameter/inside = false
shader_parameter/add_margins = true

[node name="Event" type="Node2D"]
script = SubResource("GDScript_fe2dw")

[node name="Button" type="TextureButton" parent="."]
z_index = 100
material = SubResource("ShaderMaterial_58eb4")
offset_left = -16.0
offset_top = -16.0
offset_right = 48.0
offset_bottom = 48.0
scale = Vector2(0.5, 0.5)
texture_normal = ExtResource("3_ifian")

[connection signal="mouse_entered" from="Button" to="." method="_on_button_mouse_entered"]
[connection signal="mouse_exited" from="Button" to="." method="_on_button_mouse_exited"]
[connection signal="pressed" from="Button" to="." method="_on_button_pressed"]
